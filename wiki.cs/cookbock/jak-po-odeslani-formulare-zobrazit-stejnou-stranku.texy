Jak po odeslání formuláře zobrazit stejnou stránku?
****

.[perex]
Jsme na stránce se článkem a potřebujeme uživatele přihlásit. Máme formulář na více místech a po odeslání chceme na místo původní.

Přesně na to se hodí "storeRequest":http://api.nette.org/2.0/source-Application.UI.Presenter.php.html#1115 a "restoreRequest":http://api.nette.org/2.0/source-Application.UI.Presenter.php.html#1139, které nám umožní `se vrátit`. V těchto případech Vám odpadnout starosti s přemýšlením nad `$this->redirect(...)`.


Persistentní parametr
====
* *nastavíme persistentní parametr*
* *uložíme aktuální request*
* *přesměrujeme (po zpracování) zpět na uložený reuqest*

Je důležité, aby se zpracování formuláře (requestu) odehrálo **před renderováním šablony**. Uložení requestu tedy nelze provádět v `handle<name>` nebo `action<name>` (viz "životní cyklus presenteru":http://doc.nette.org/cs/presenters#toc-zivotni-cyklus-presenteru).

/--php
class MyPresenter extends BasePresenter
{
	/** @persistent */
	public $backlink;


	// případně pro celou aplikaci v BasePresenteru v metodě beforeRender(), viz níže
	public function renderDefault()
	{
		// uložíme request, tedy aktuální adresu
		$this->backlink = $this->storeRequest();
	}


	// nějaký ten formlulář
	protected function createComponentForm()
	{
		// ...
		$form->onSubmit[] = callback($this, "processForm");
	}


	// jeho zpracování
	public function processForm(Form $form)
	{
		$values = $form->values;
		// ...

		$this->flashMessage("Uloženo");

		// vyvoláme přesměrování na uložený request
		$this->restoreRequest($this->backlink);
	}

}
\--

Funguje to pěkně. Jedinou nevýhodou je zobrazování presistentního parametru v adrese. Proto je (při nejmenším) vhodnější používat jej pouze tam, kde jej využijeme (tedy ne v `BasePresenter`, pokud se to týká jediné stránky). Řešením by mohlo být *přesunutí uložiště do session*.


V session a krásněji
===

Rovnou v BasePresenter, jelikož už nám nemá co překážet.

/--php
class BasePresenter extends Nette\Application\UI\Presetner
{
	/** @var Nette\Http\Session */
	public $mySession;


	public startup()
	{
		// nastartbujeme session
		$this->mySession = $this->session->getSection("mySession");
	}


	public function renderDefault()
	{
		// uložíme request
		$this->mySession->backlink = $this->storeRequest();
	}
}
\--

Následné použití:
/--php
class MyPresenter extends BasePresenter
{
	// formulář stejně


	// jeho zpracování
	public function processForm(Form $form)
	{
		$values = $form->values;
		// ...

		$this->flashMessage("Uloženo");

		// vyvoláme přesměrování na uložený request
		// tady změna: vytáhneme backlink ze session!
		$this->restoreRequest($this->mySession->backlink);
	}
}
\--

A už nikde nic nepřekáží.